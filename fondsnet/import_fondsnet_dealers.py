#!/usr/bin/env python
import os
from datetime import timedelta
from logging import getLogger
from pathlib import Path
from typing import Sequence

import yaml
from fondsnet_sdk.api.schema.client.api.search import SearchApi
from fondsnet_sdk.api.schema.models.search.result_item import ResultItem
from fondsnet_sdk.logging_client import get_client
from fondsnet_sdk.utils.dealers import get_fondsnet_dealers
from spec2api.runtime.client.api_client import ApiClient

FONDSNET_DEALER_OUTPUT_FIXTURE_PATH = Path("moneymeets_tenants/data/fixtures/fondsnet-dealer.yaml")

DEALER_BLACKLIST = (("Max", "Mustervermittler"),)


def get_dealers(fondsnet_sdk_settings: dict) -> Sequence[ResultItem]:
    return get_fondsnet_dealers(SearchApi(ApiClient(get_client(fondsnet_sdk_settings, getLogger(__file__)))))


def write_fixture(dealers: Sequence[ResultItem]):
    dealers_yml = yaml.safe_dump(
        tuple(
            {
                "fields": {
                    "company_name": dealer.firma,
                    "first_name": dealer.vorname,
                    "last_name": dealer.nachname,
                    "code": dealer.kundennr,
                },
                "model": "moneymeets_tenants.fondsnetdealer",
                "pk": dealer.id,
            }
            for dealer in dealers
            # TODO: "Vermittler" maybe not necessary, but don't trust the fondsnet API...
            if dealer.art == "Vermittler" and (dealer.vorname, dealer.nachname) not in DEALER_BLACKLIST
        ),
        allow_unicode=True,
        sort_keys=False,
        width=160,
    )
    FONDSNET_DEALER_OUTPUT_FIXTURE_PATH.write_text(f"# auto-generated by {Path(__file__).name}\n{dealers_yml}")


def main():
    write_fixture(
        get_dealers(
            {
                "USER": os.environ["FONDSNET_SDK_USER"],
                "PASSWORD": os.environ["FONDSNET_SDK_PASSWORD"],
                "ENVIRONMENT": "LIVE",
                "TIMEOUT": timedelta(minutes=1),
            },
        ),
    )


if __name__ == "__main__":
    main()
